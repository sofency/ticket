<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
        <!-- 配置service接口 -->
	<bean id="communityService" class="com.sofency.ticket.service.CommunityService"></bean>
	<bean id="grabTicketService" class="com.sofency.ticket.service.GrabTicketService"></bean>
	<bean id="voteTicketService" class="com.sofency.ticket.service.VoteTicketService"></bean>
	<bean id="ticketService" class="com.sofency.ticket.service.TicketService"></bean>
	<bean id="studentService" class="com.sofency.ticket.service.StudentService"></bean>
	<!--	<bean id="loginService" class="com.sofency.ticket.service.impl.LoginServiceImpl"/>-->
<!--	<bean id="instituteMajorService" class="com.sofency.ssm.service.impl.InstituteMajorServiceImpl"/>-->
<!--	<bean id="fameService" class="com.sofency.ssm.service.impl.FameServiceImpl"/>-->
<!--	<bean id="engineerService" class="com.sofency.ssm.service.impl.EngineerServiceImpl"/>-->
<!--	<bean id="candidateService" class="com.sofency.ssm.service.impl.CandidateServiceImpl"/>-->
<!--	<bean id="getFameService" class="com.sofency.ssm.service.impl.GetFameServiceImpl"/>-->
<!--	<bean id="messageService" class="com.sofency.ssm.service.impl.MessageServiceImpl"/>-->

<!--        &lt;!&ndash; 邮件类 &ndash;&gt;-->
<!--	<bean id="sendMailUtilService" class="com.sofency.ssm.service.impl.SendMailUtilServiceImpl"/>-->
		 <!--邮件配置-->
<!--	<context:property-placeholder location="classpath:mail.properties" ignore-unresolvable="true"/>-->
<!--	&lt;!&ndash;配置邮件接口&ndash;&gt;-->
<!--	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">-->
<!--		<property name="host" value="${mail.smtp.host}"/>-->
<!--		<property name="username" value="${mail.smtp.username}"/>-->
<!--		<property name="password" value="${mail.smtp.password}"/>-->
<!--		<property name="defaultEncoding" value="${mail.smtp.defaultEncoding}"/>-->
<!--		<property name="javaMailProperties">-->
<!--			<props>-->
<!--				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>-->
<!--				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>-->
<!--				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>-->
<!--				<prop key="mail.smtp.port">465</prop>-->
<!--			</props>-->
<!--		</property>-->
<!--	</bean>-->


	<context:property-placeholder ignore-unresolvable="true" location="classpath:redis.properties" />
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="database" value="${redis.dbIndex}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!--可以序列化对象-->
		<property name="defaultSerializer">
			<bean  class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expiration}" />
	</bean>

	<!-- 配置RedisCacheConfig -->
	<bean id="redisCacheConfig" class="com.sofency.ticket.config.RedisConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="redisCacheManager" />
	</bean>
</beans>